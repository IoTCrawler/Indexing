<meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no'/>
<script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.53.1/mapbox-gl.js'></script>
<link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.53.1/mapbox-gl.css' rel='stylesheet'/>
<link href='/search-engine/stylesheets/cityOfAarhus.css' rel='stylesheet'/>

<div class="container-fluid">
    <div class="row">
        <div class="card" style="width: 100%">
            <div class="card-body" style="background-color: #222222"> {{!--#343332--}}
                <div id='mapDark'></div>

                <div class="card-footer" id='menu'>

                    <input id='dark-v10' type='radio' name='rtoggle' value='dark' checked='checked'>
                    <label for='dark'>dark</label>

                    <input id='streets-v11' type='radio' name='rtoggle' value='streets'>
                    <label for='streets'>streets</label>

                    <input id='navigation-preview-night-v4' type='radio' name='rtoggle' value='traffic'>
                    <label for='traffic'>traffic</label>

                    <input id='light-v10' type='radio' name='rtoggle' value='light'>
                    <label for='light'>light</label>

                    <input id='outdoors-v11' type='radio' name='rtoggle' value='outdoors'>
                    <label for='outdoors'>outdoors</label>

                    <input id='satellite-v9' type='radio' name='rtoggle' value='satellite'>
                    <label for='satellite'>satellite</label>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    mapboxgl.accessToken = 'pk.eyJ1Ijoic2EwMDU0IiwiYSI6ImNqdHJoemxrbDBhc2k0M21tOHhqdzM3b2YifQ.QbUZbsHJuPXt_Gd9hDnu2A';
    var map = new mapboxgl.Map({
        // style: 'mapbox://styles/mapbox/dark-v10',
        style: 'mapbox://styles/mapbox/navigation-preview-night-v4',
        center: [10.2039, 56.1629],
        zoom: 10.5,
        pitch: 60,
        bearing: -16.35,
        container: 'mapDark'
    });

    function rotateCamera(timestamp) {
    // clamp the rotation between 0 -360 degrees
    // Divide timestamp by 100 to slow rotation to ~10 degrees / sec
        map.rotateTo((timestamp / 850) % 360, { duration: 0 });
    // Request the next frame of the animation.
        requestAnimationFrame(rotateCamera);
    }

    let layerList = document.getElementById('menu');
    let inputs = layerList.getElementsByTagName('input');


    // The 'building' layer in the mapbox-streets vector source contains building-height
    // data from OpenStreetMap.
    map.on('load', function () {

        // Start the animation.
        rotateCamera(0);
        // Insert the layer beneath any symbol layer.
        var layers = map.getStyle().layers;

        var labelLayerId;
        for (var i = 0; i < layers.length; i++) {
            if (layers[i].type === 'symbol' && layers[i].layout['text-field']) {
                labelLayerId = layers[i].id;
                break;
            }
        }

        function switchLayer(layer) {
            var layerId = layer.target.id;
            map.setStyle('mapbox://styles/mapbox/' + layerId);
        }

        for (var i = 0; i < inputs.length; i++) {
            inputs[i].onclick = switchLayer;
        }

        map.addLayer({
            'id': '3d-buildings',
            'source': 'composite',
            'source-layer': 'building',
            'filter': ['==', 'extrude', 'true'],
            'type': 'fill-extrusion',
            'minzoom': 15,
            'paint': {
                'fill-extrusion-color': '#aaa',

            // use an 'interpolate' expression to add a smooth transition effect to the
            // buildings as the user zooms in
                'fill-extrusion-height': [
                    'interpolate', ['linear'], ['zoom'],
                    15, 0,
                    15.05, ['get', 'height']
                ],
                'fill-extrusion-base': [
                    'interpolate', ['linear'], ['zoom'],
                    15, 0,
                    15.05, ['get', 'min_height']
                ],
                'fill-extrusion-opacity': .6
            }
        }, labelLayerId);

    });
</script>



{{!--
<script>
    mapboxgl.accessToken = 'pk.eyJ1Ijoic2EwMDU0IiwiYSI6ImNqdHJoemxrbDBhc2k0M21tOHhqdzM3b2YifQ.QbUZbsHJuPXt_Gd9hDnu2A';
    var map = new mapboxgl.Map({
        container: 'mapDark',
        style: 'mapbox://styles/mapbox/navigation-preview-night-v4',
        /*style: 'mapbox://styles/mapbox/dark-v10',*/
        zoom: 12,
        center: [10.2039, 56.1629], // this API takes in latitude then longitude
        pitch: 60.0,
        bearing: -16.35,
        /* maxZoom: 15, */
        minZoom: 4,
    });

    var layerList = document.getElementById('menu');
    var inputs = layerList.getElementsByTagName('input');

    function switchLayer(layer) {
        var layerId = layer.target.id;
        map.setStyle('mapbox://styles/mapbox/' + layerId);
    }

    for (var i = 0; i < inputs.length; i++) {
        inputs[i].onclick = switchLayer;
    }

</script>
--}}
